% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/helper.R
\name{runLimma}
\alias{runLimma}
\title{Run Limma Differential Expression Analysis}
\usage{
runLimma(exprs, group, useVoom = FALSE)
}
\arguments{
\item{exprs}{A numeric matrix or data frame containing expression values.
Rows represent genes/features and columns represent samples. For RNA-seq
data, this should contain TPM normalized data, raw counts or log2-transformed counts.}

\item{group}{A factor vector specifying the experimental groups for each
sample. Must have exactly two levels representing the conditions to compare.
Length must equal the number of columns in exprs.}

\item{useVoom}{Logical value indicating whether to apply voom transformation
for RNA-seq count data. Default is FALSE. Set to TRUE for RNA-seq count data
to model mean-variance relationship.}
}
\value{
A data frame containing the results from limma::topTable with the
following columns:
\itemize{
\item logFC: log2 fold change
\item AveExpr: average expression level
\item t: t-statistic
\item P.Value: raw p-value
\item adj.P.Val: adjusted p-value (FDR)
\item B: log-odds of differential expression
}
}
\description{
Performs differential expression analysis using the limma package with
optional voom transformation for RNA-seq data.
}
\details{
This function performs differential expression analysis using the limma
package. The contrast tested is always the second level of the group factor
minus the first level (alphabetically ordered).

When useVoom = TRUE, the function will:
\itemize{
\item Convert log2-transformed data back to counts if max(exprs) < 100
\item Apply voom transformation to model mean-variance relationship
\item Proceed with standard limma analysis
}
}
\examples{
# Example 1: Basic analysis with microarray data
set.seed(123)
exprs_data <- matrix(rnorm(1000 * 20, mean = 10), nrow = 1000, ncol = 20)
rownames(exprs_data) <- paste0("Gene_", 1:1000)
colnames(exprs_data) <- paste0("Sample_", 1:20)
group_factor <- factor(rep(c("Control", "Treatment"), each = 10))

results <- PGSA:::runLimma(exprs = exprs_data,
                    group = group_factor,
                    useVoom = FALSE)
head(results)

# Example 2: RNA-seq data with voom transformation
# Simulate count data
count_data <- matrix(rpois(1000 * 20, lambda = 100), nrow = 1000, ncol = 20)
rownames(count_data) <- paste0("Gene_", 1:1000)
colnames(count_data) <- paste0("Sample_", 1:20)

results_voom <- PGSA:::runLimma(exprs = count_data,
                         group = group_factor,
                         useVoom = TRUE)
head(results_voom)

}
\seealso{
\code{\link[limma]{lmFit}}, \code{\link[limma]{voom}},
\code{\link[limma]{eBayes}}, \code{\link[limma]{topTable}}
}
\keyword{internal}
